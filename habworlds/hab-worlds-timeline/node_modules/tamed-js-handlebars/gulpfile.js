// grab our gulp packages
var
    gulp  = require ('gulp'),
    watch = require ('gulp-watch'),
    clean = require ('gulp-clean'),
    concat = require ('gulp-concat'),
    debug = require ('gulp-debug'),
    rename = require ('gulp-rename'),
    vinylPaths = require ('vinyl-paths'),
    uglify = require ('gulp-uglify')

function compile (target) {
    return gulp.src([
        './src/html/Templater.js', 
        './src/TamedHandlebars.js',
        './src/TamedSimpleHandlebars.js',
        ])
        .pipe (debug ({title: 'compile:'}))
        .pipe (concat (target))
        .pipe (gulp.dest ('./dist/'))
}

gulp.task ('live-build', function () {
    return watch ('src/**/*.js', gulp.parallel ('build'));
})

gulp.task ('clean', function () {
    return gulp.src (['./dist/*'], {read: false})
        .pipe (debug ({title: 'clean:'}))
        .pipe (clean ());
})

gulp.task ('compile-tamed-handlebars', function () {
    return compile ('tamed-handlebars.js')
})

gulp.task ('compile-tamed-handlebars-simple', function () {
    return compile ('tamed-handlebars-simple.js')
})

gulp.task ('compile-tamed-handlebars-full', function () {
    return compile ('tamed-handlebars-full.js')
})

gulp.task ('minify', function () {
    return gulp.src (['./dist/*.js'])
        .pipe (debug ({title: 'minify:'}))
        .pipe (uglify ())
        .pipe (rename ({suffix: '.min'}))
        .pipe (gulp.dest ('./dist/'))
})

// create a default task and just log a message
gulp.task ('build', gulp.series ('clean', 'compile-tamed-handlebars', 'compile-tamed-handlebars-simple', 'compile-tamed-handlebars-full', 'minify'));
gulp.task ('default', gulp.series ('clean'));
